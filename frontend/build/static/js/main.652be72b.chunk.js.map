{"version":3,"sources":["components/Footer/Footer.js","constants/userConstants.js","actions/userActions.js","components/Header/Header.js","screens/LandingPage/LandingPage.js","components/MainScreen/MainScreen.js","constants/notesContants.js","actions/notesActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyNotes/MyNotes.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/CreateNote/CreateNote.js","screens/SingleNote/SingleNote.js","screens/ProfileScreen/ProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/userReducers.js","reducers/notesReducers.js","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","backgroundColor","color","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","register","name","pic","Header","setSearch","history","useHistory","useDispatch","userInfo","useSelector","state","userLogin","Navbar","bg","expand","variant","Brand","to","Toggle","aria-controls","Collapse","id","Nav","Form","inline","FormControl","placeholder","onChange","e","target","value","Link","href","NavDropdown","title","Item","Divider","onClick","removeItem","push","LandingPage","useEffect","getItem","Button","size","MainScreen","props","children","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_LIST_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_CREATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_DELETE_FAIL","deleteNoteAction","getState","Authorization","token","delete","Loading","alignItems","height","Spinner","animation","ErrorMessage","Alert","fontSize","MyNotes","search","noteList","loading","notes","error","successCreate","noteCreate","success","successUpdate","noteUpdate","noteDelete","loadingDelete","errorDelete","successDelete","get","marginLeft","marginBottom","reverse","filter","filteredNote","toLowerCase","includes","map","note","Accordion","Card","margin","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","window","confirm","Body","Badge","category","content","createdAt","substring","LoginScreen","useState","setEmail","setPassword","submitHandler","preventDefault","onSubmit","Group","controlId","Label","Control","RegisterScreen","setName","setPic","confirmpassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","File","pics","FormData","append","fetch","method","body","then","res","json","console","log","url","toString","catch","err","postDetails","files","label","custom","CreateNote","setTitle","setContent","setCategory","resetHandler","createNoteAction","rows","Date","toLocaleDateString","SingleNote","match","date","setDate","params","updatedAt","fetching","put","updateNoteAction","ProfileScreen","confirmPassword","userUpdate","md","user","src","alt","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.652be72b.chunk.js","sourcesContent":["import { Col, Container, Row } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer\r\n      style={{\r\n        width: '100%',\r\n        position: 'relative',\r\n        bottom: 0,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#158cba',\r\n        color: '#333',\r\n      }}\r\n    >\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy; Thuc Cao</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\n","import axios from 'axios';\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n} from '../constants/userConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      {\r\n        email,\r\n        password,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\nexport const register = (name, email, password, pic) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, pic, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post('/api/users/profile', user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import {\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { logout } from '../../actions/userActions';\r\n\r\nconst Header = ({ setSearch }) => {\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <Link to=\"/\">Notes App</Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"m-auto\">\r\n            {userInfo && (\r\n              <Form inline>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  className=\"mr-sm-2\"\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n              </Form>\r\n            )}\r\n          </Nav>\r\n          {userInfo ? (\r\n            <Nav>\r\n              <Nav.Link href=\"/mynotes\">\r\n                <Link to=\"/mynotes\">My Notes</Link>\r\n              </Nav.Link>\r\n              <NavDropdown title={userInfo?.name} id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"/profile\">My Profile</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item onClick={logoutHandler}>\r\n                  Log Out\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          ) : (\r\n            <Nav>\r\n              <Nav.Link>\r\n                <Link to=\"/login\">Login</Link>\r\n              </Nav.Link>\r\n            </Nav>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// import { useEffect } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Button, Container, Row } from 'react-bootstrap';\r\nimport './LandingPage.css';\r\n\r\nconst LandingPage = ({ history }) => {\r\n  useEffect(() => {\r\n    const userInfo = localStorage.getItem('userInfo');\r\n    if (userInfo) {\r\n      history.push('/mynotes');\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"intro-text\">\r\n            <div>\r\n              <h1 className=\"title\">Welcome to Notes App</h1>\r\n              <p className=\"subtitle\">One Safe place for all your notes.</p>\r\n            </div>\r\n            <div className=\"buttoncontainer\">\r\n              <a href=\"/login\">\r\n                <Button size=\"lg\" className=\"landingbutton\">\r\n                  Login\r\n                </Button>\r\n              </a>\r\n              <a href=\"/register\">\r\n                <Button\r\n                  size=\"lg\"\r\n                  className=\"landingbutton\"\r\n                  variant=\"outline-primary\"\r\n                >\r\n                  Signup\r\n                </Button>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import { Container, Row } from 'react-bootstrap';\r\nimport './MainScreen.css';\r\n\r\nconst MainScreen = (props) => {\r\n  const { title, children } = props;\r\n\r\n  return (\r\n    <div className=\"mainback\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"page\">\r\n            {title && (\r\n              <>\r\n                <h1 className=\"heading\">{title}</h1>\r\n                <hr />\r\n              </>\r\n            )}\r\n            {children}\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","export const NOTES_LIST_REQUEST = 'NOTES_LIST_REQUEST';\r\nexport const NOTES_LIST_SUCCESS = 'NOTES_LIST_SUCCESS';\r\nexport const NOTES_LIST_FAIL = 'NOTES_LIST_FAIL';\r\n\r\nexport const NOTES_CREATE_REQUEST = 'NOTES_CREATE_REQUEST';\r\nexport const NOTES_CREATE_SUCCESS = 'NOTES_CREATE_SUCCESS';\r\nexport const NOTES_CREATE_FAIL = 'NOTES_CREATE_FAIL';\r\n\r\nexport const NOTES_UPDATE_REQUEST = 'NOTES_UPDATE_REQUEST';\r\nexport const NOTES_UPDATE_SUCCESS = 'NOTES_UPDATE_SUCCESS';\r\nexport const NOTES_UPDATE_FAIL = 'NOTES_UPDATE_FAIL';\r\n\r\nexport const NOTES_DELETE_REQUEST = 'NOTES_DELETE_REQUEST';\r\nexport const NOTES_DELETE_SUCCESS = 'NOTES_DELETE_SUCCESS';\r\nexport const NOTES_DELETE_FAIL = 'NOTES_DELETE_FAIL';\r\n","import axios from 'axios';\r\nimport {\r\n  NOTES_CREATE_FAIL,\r\n  NOTES_CREATE_REQUEST,\r\n  NOTES_CREATE_SUCCESS,\r\n  NOTES_DELETE_FAIL,\r\n  NOTES_DELETE_REQUEST,\r\n  NOTES_DELETE_SUCCESS,\r\n  NOTES_LIST_FAIL,\r\n  NOTES_LIST_REQUEST,\r\n  NOTES_LIST_SUCCESS,\r\n  NOTES_UPDATE_FAIL,\r\n  NOTES_UPDATE_REQUEST,\r\n  NOTES_UPDATE_SUCCESS,\r\n} from '../constants/notesContants';\r\n\r\nexport const listNotes = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: NOTES_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/notes`, config);\r\n\r\n    dispatch({\r\n      type: NOTES_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: NOTES_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createNoteAction =\r\n  (title, content, category) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: NOTES_CREATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/api/notes/create`,\r\n        { title, content, category },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: NOTES_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: NOTES_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const updateNoteAction =\r\n  (id, title, content, category) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: NOTES_UPDATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/notes/${id}`,\r\n        { title, content, category },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: NOTES_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: NOTES_UPDATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteNoteAction = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: NOTES_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/notes/${id}`, config);\r\n\r\n    dispatch({\r\n      type: NOTES_DELETE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: NOTES_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loading({ size = 100 }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: '100%',\r\n      }}\r\n    >\r\n      <Spinner\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n        }}\r\n        animation=\"border\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import { Alert } from 'react-bootstrap';\r\n\r\nconst ErrorMessage = ({ variant = 'info', children }) => {\r\n  return (\r\n    <Alert variant={variant} style={{ fontSize: 20 }}>\r\n      <strong>{children}</strong>\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useEffect } from 'react';\r\nimport { Accordion, Badge, Button, Card } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport MainScreen from '../../components/MainScreen/MainScreen';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteNoteAction, listNotes } from '../../actions/notesActions';\r\nimport Loading from '../../components/Loading';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst MyNotes = ({ search }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const noteList = useSelector((state) => state.noteList);\r\n  const { loading, notes, error } = noteList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n  const { success: successCreate } = noteCreate;\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { success: successUpdate } = noteUpdate;\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = noteDelete;\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      //do something...\r\n      dispatch(deleteNoteAction(id));\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(listNotes());\r\n    if (!userInfo) {\r\n      history.push('/');\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successCreate,\r\n    successUpdate,\r\n    successDelete,\r\n  ]);\r\n\r\n  return (\r\n    <MainScreen title={`Welcome Back ${userInfo.name} .. `}>\r\n      <Link to=\"createnote\">\r\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\r\n          Create New Note\r\n        </Button>\r\n      </Link>\r\n      {errorDelete && (\r\n        <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n      )}\r\n      {loadingDelete && <Loading />}\r\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n      {loading && <Loading />}\r\n      {notes &&\r\n        notes\r\n          .reverse()\r\n          .filter((filteredNote) =>\r\n            filteredNote.title.toLowerCase().includes(search.toLowerCase())\r\n          )\r\n          .map((note) => (\r\n            <Accordion key={note._id}>\r\n              <Card style={{ margin: 10 }}>\r\n                <Card.Header style={{ display: 'flex' }}>\r\n                  <span\r\n                    style={{\r\n                      color: 'black',\r\n                      textDecoration: 'none',\r\n                      flex: 1,\r\n                      cursor: 'pointer',\r\n                      alignSelf: 'center',\r\n                      fontSize: 18,\r\n                    }}\r\n                  >\r\n                    <Accordion.Toggle\r\n                      as={Card.Text}\r\n                      variant=\"link\"\r\n                      eventKey=\"0\"\r\n                    >\r\n                      {note.title}\r\n                    </Accordion.Toggle>\r\n                  </span>\r\n                  <div>\r\n                    <Button href={`/note/${note._id}`}>Edit</Button>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"mx-2\"\r\n                      onClick={() => deleteHandler(note._id)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </div>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <Card.Body>\r\n                    <h4>\r\n                      <Badge variant=\"success\">\r\n                        Category - {note.category}\r\n                      </Badge>\r\n                    </h4>\r\n                    <blockquote className=\"blockquote mb-0\">\r\n                      <p>\r\n                        <ReactMarkdown>{note.content}</ReactMarkdown>\r\n                      </p>\r\n                      <footer className=\"blockquote-footer\">\r\n                        Created On{' '}\r\n                        <cite title=\"Source Title\">\r\n                          {note.createdAt.substring(0, 10)}\r\n                        </cite>\r\n                      </footer>\r\n                    </blockquote>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          ))}\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default MyNotes;\r\n","import { useEffect, useState } from 'react';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport Loading from '../../components/Loading';\r\nimport MainScreen from '../../components/MainScreen/MainScreen';\r\nimport './LoginScreen.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../actions/userActions';\r\n\r\nconst LoginScreen = ({ history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/mynotes');\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"LOGIN\">\r\n      <div className=\"loginContainer\">\r\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n        {loading && <Loading />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBassicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"Enter Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            Need an account ? <Link to=\"/register\">Register Here!</Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import MainScreen from '../../components/MainScreen/MainScreen';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport Loading from '../../components/Loading';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from '../../actions/userActions';\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [pic, setPic] = useState(\r\n    'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg'\r\n  );\r\n  const [password, setPassword] = useState('');\r\n  const [confirmpassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n  const [picMessage, setPicMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/mynotes');\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmpassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(register(name, email, password, pic));\r\n    }\r\n  };\r\n\r\n  // function handle storage picture\r\n  const postDetails = (pics) => {\r\n    if (!pics) {\r\n      return setPicMessage('Please Select an Image');\r\n    }\r\n    setPicMessage(null);\r\n\r\n    if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n      const data = new FormData();\r\n      data.append('file', pics);\r\n      data.append('upload_preset', 'noteapp');\r\n      data.append('cloud_name', 'thuccao');\r\n      fetch('https://api.cloudinary.com/v1_1/thuccao/image/upload', {\r\n        method: 'post',\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          setPic(data.url.toString());\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      return setPicMessage('Please Select an Image');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"REGISTER\">\r\n      <div className=\"loginContainer\">\r\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n        {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n        {loading && <Loading />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              value={name}\r\n              placeholder=\"Enter name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={confirmpassword}\r\n              placeholder=\"Confirm Password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          {picMessage && (\r\n            <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n          )}\r\n          <Form.Group controlId=\"pic\">\r\n            <Form.Label>Profile Picture</Form.Label>\r\n            <Form.File\r\n              onChange={(e) => postDetails(e.target.files[0])}\r\n              id=\"custom-file\"\r\n              type=\"image/png\"\r\n              label=\"Upload Profile Picture\"\r\n              custom\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            Have an Account ? <Link to=\"/login\">Login!</Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainScreen from '../../components/MainScreen/MainScreen';\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createNoteAction } from '../../actions/notesActions';\r\nimport Loading from '../../components/Loading';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nfunction CreateNote({ history }) {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [category, setCategory] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n  const { loading, error, note } = noteCreate;\r\n\r\n  console.log(note);\r\n\r\n  const resetHandler = () => {\r\n    setTitle('');\r\n    setCategory('');\r\n    setContent('');\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !content || !category) return;\r\n    dispatch(createNoteAction(title, content, category));\r\n\r\n    resetHandler();\r\n    history.push('/mynotes');\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <MainScreen title=\"Create a Note\">\r\n      <Card>\r\n        <Card.Header>Create a new Note</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={submitHandler}>\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                value={title}\r\n                placeholder=\"Enter the title\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                value={content}\r\n                placeholder=\"Enter the content\"\r\n                rows={4}\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"content\"\r\n                value={category}\r\n                placeholder=\"Enter the Category\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {loading && <Loading size={50} />}\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Create Note\r\n            </Button>\r\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\r\n              Reset Feilds\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <Card.Footer className=\"text-muted\">\r\n          Creating on - {new Date().toLocaleDateString()}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default CreateNote;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainScreen from '../../components/MainScreen/MainScreen';\r\nimport axios from 'axios';\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteNoteAction, updateNoteAction } from '../../actions/notesActions';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport Loading from '../../components/Loading';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nfunction SingleNote({ match, history }) {\r\n  const [title, setTitle] = useState();\r\n  const [content, setContent] = useState();\r\n  const [category, setCategory] = useState();\r\n  const [date, setDate] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { loading, error } = noteUpdate;\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const { loading: loadingDelete, error: errorDelete } = noteDelete;\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      dispatch(deleteNoteAction(id));\r\n    }\r\n    history.push('/mynotes');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetching = async () => {\r\n      const { data } = await axios.get(`/api/notes/${match.params.id}`);\r\n\r\n      setTitle(data.title);\r\n      setContent(data.content);\r\n      setCategory(data.category);\r\n      setDate(data.updatedAt);\r\n    };\r\n\r\n    fetching();\r\n  }, [match.params.id, date]);\r\n\r\n  const resetHandler = () => {\r\n    setTitle('');\r\n    setCategory('');\r\n    setContent('');\r\n  };\r\n\r\n  const updateHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateNoteAction(match.params.id, title, content, category));\r\n    if (!title || !content || !category) return;\r\n\r\n    resetHandler();\r\n    history.push('/mynotes');\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Edit Note\">\r\n      <Card>\r\n        <Card.Header>Edit your Note</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={updateHandler}>\r\n            {loadingDelete && <Loading />}\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            {errorDelete && (\r\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n            )}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                placeholder=\"Enter the title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Enter the content\"\r\n                rows={4}\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"content\"\r\n                placeholder=\"Enter the Category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {loading && <Loading size={50} />}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Update Note\r\n            </Button>\r\n            <Button\r\n              className=\"mx-2\"\r\n              variant=\"danger\"\r\n              onClick={() => deleteHandler(match.params.id)}\r\n            >\r\n              Delete Note\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <Card.Footer className=\"text-muted\">\r\n          Updated on - {date.substring(0, 10)}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default SingleNote;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport MainScreen from '../../components/MainScreen/MainScreen';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { updateProfile } from '../../actions/userActions';\r\nimport Loading from '../../components/Loading';\r\nimport './ProfileScreen.css';\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [pic, setPic] = useState();\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [picMessage, setPicMessage] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { loading, error, success } = userUpdate;\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/');\r\n    } else {\r\n      setName(userInfo.name);\r\n      setEmail(userInfo.email);\r\n      setPic(userInfo.pic);\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  // handle picture\r\n  const postDetails = (pics) => {\r\n    if (!pics) {\r\n      return setPicMessage('Please Select an Image');\r\n    }\r\n    setPicMessage(null);\r\n\r\n    if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n      const data = new FormData();\r\n      data.append('file', pics);\r\n      data.append('upload_preset', 'noteapp');\r\n      data.append('cloud_name', 'thuccao');\r\n      fetch('https://api.cloudinary.com/v1_1/thuccao/image/upload', {\r\n        method: 'post',\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          setPic(data.url.toString());\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      return setPicMessage('Please Select an Image');\r\n    }\r\n  };\r\n\r\n  // handle submit\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password === confirmPassword)\r\n      dispatch(updateProfile({ name, email, password, pic }));\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"EDIT PROFILE\">\r\n      <div>\r\n        <Row className=\"profileContainer\">\r\n          <Col md={6}>\r\n            <Form onSubmit={submitHandler}>\r\n              {loading && <Loading />}\r\n              {success && (\r\n                <ErrorMessage variant=\"success\">\r\n                  Updated Successfully\r\n                </ErrorMessage>\r\n              )}\r\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              {picMessage && (\r\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n              )}\r\n              <Form.Group controlId=\"pic\">\r\n                <Form.Label>Change Profile Picture</Form.Label>\r\n                <Form.File\r\n                  type=\"image/png\"\r\n                  label=\"Upload Profile Picture\"\r\n                  id=\"custom-file\"\r\n                  onChange={(e) => postDetails(e.target.files[0])}\r\n                  custom\r\n                ></Form.File>\r\n              </Form.Group>\r\n              <Button type=\"submit\" variant=\"primary\">\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n          <Col\r\n            style={{\r\n              display: ' flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <img src={pic} alt={name} className=\"profilePic\" />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import './App.css';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport LandingPage from './screens/LandingPage/LandingPage';\nimport MyNotes from './screens/MyNotes/MyNotes';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport LoginScreen from './screens/LoginScreen/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen/RegisterScreen';\nimport CreateNote from './screens/CreateNote/CreateNote';\nimport SingleNote from './screens/SingleNote/SingleNote';\nimport { useState } from 'react';\nimport ProfileScreen from './screens/ProfileScreen/ProfileScreen';\n\nfunction App() {\n  const [search, setSearch] = useState('');\n\n  return (\n    <Router>\n      <Header setSearch={setSearch} />\n      <main>\n        <Route path=\"/\" component={LandingPage} exact />\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/profile\" component={ProfileScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route path=\"/createnote\" component={CreateNote} />\n        <Route path=\"/note/:id\" component={SingleNote} />\n        <Route path=\"/mynotes\" component={() => <MyNotes search={search} />} />\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers';\r\nimport {\r\n  noteCreateReducer,\r\n  noteDeleteReducer,\r\n  noteListReducer,\r\n  noteUpdateReducer,\r\n} from './reducers/notesReducers';\r\n\r\nconst reducer = combineReducers({\r\n  // this will contain our reducers\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userUpdate: userUpdateReducer,\r\n  noteList: noteListReducer,\r\n  noteCreate: noteCreateReducer,\r\n  noteUpdate: noteUpdateReducer,\r\n  noteDelete: noteDeleteReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  NOTES_CREATE_FAIL,\r\n  NOTES_CREATE_REQUEST,\r\n  NOTES_CREATE_SUCCESS,\r\n  NOTES_DELETE_FAIL,\r\n  NOTES_DELETE_REQUEST,\r\n  NOTES_DELETE_SUCCESS,\r\n  NOTES_LIST_FAIL,\r\n  NOTES_LIST_REQUEST,\r\n  NOTES_LIST_SUCCESS,\r\n  NOTES_UPDATE_FAIL,\r\n  NOTES_UPDATE_REQUEST,\r\n  NOTES_UPDATE_SUCCESS,\r\n} from '../constants/notesContants';\r\n\r\nexport const noteListReducer = (state = { notes: [] }, action) => {\r\n  switch (action.type) {\r\n    case NOTES_LIST_REQUEST:\r\n      return { loading: true };\r\n    case NOTES_LIST_SUCCESS:\r\n      return { loading: false, notes: action.payload };\r\n    case NOTES_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTES_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case NOTES_CREATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case NOTES_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTES_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case NOTES_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case NOTES_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTES_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case NOTES_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case NOTES_DELETE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}